import subprocess
import json

# Exemplos v√°lidos
exemplos = {
    "1": {
        "nome": "Hello World",
        "domain": "exemplos/domain_helloworld.pddl",
        "problem": "exemplos/problem_helloworld.pddl"
    },
    "2": {
        "nome": "Blocks",
        "domain": "exemplos/domain_blocks.pddl",
        "problem": "exemplos/problem_blocks.pddl"
    },
    "3": {
        "nome": "Brainfuck",
        "domain": "exemplos/domain_brainfuck.pddl",
        "problem": "exemplos/problem_brainfuck.pddl"
    },
    "4": {
        "nome": "JSON",
        "domain": "exemplos/domain_json.pddl",
        "problem": "exemplos/problem_json.pddl"
    },
    "5": {
        "nome": "Lights",
        "domain": "exemplos/domain_lights.pddl",
        "problem": "exemplos/problem_lights.pddl"
    }
}

# Exemplos inv√°lidos
invalidos = {
    "1": {
        "nome": "Blocks Inv√°lido",
        "domain": "exemplos/domain_blocks_invalido.pddl",
        "problem": "exemplos/problem_blocks_invalido.pddl"
    },
    "2": {
        "nome": "JSON Inv√°lido",
        "domain": "exemplos/domain_json_invalido.pddl",
        "problem": "exemplos/problem_json_invalido.pddl"
    }
}

def run_pddl(domain_path, problem_path):
    cmd = ["python", "-m", "src.main", domain_path, problem_path]
    print(f"\nüì§ Executando: {' '.join(cmd)}\n")
    resultado = subprocess.run(cmd, capture_output=True, text=True)

    if resultado.returncode == 0:
        print("‚úÖ Execu√ß√£o finalizada com sucesso.\n")
        print("üìÑ Sa√≠da:")
        print(resultado.stdout)
    else:
        print("‚ùå Erro na execu√ß√£o.\n")
        print("üìÑ Erro:")
        print(resultado.stderr)

def submenu_invalidos():
    while True:
        print("\n--- Exemplos PDDL Inv√°lidos ---")
        for key, val in invalidos.items():
            print(f"{key} - {val['nome']}")
        print("0 - Voltar")

        escolha = input("Escolha uma op√ß√£o: ").strip()

        if escolha == "0":
            break
        elif escolha in invalidos:
            inval = invalidos[escolha]
            run_pddl(inval["domain"], inval["problem"])
        else:
            print("Op√ß√£o inv√°lida. Tente novamente.")

def gerar_ast():
    print("\nüå≥ --- Gerar AST ---")
    for key, val in exemplos.items():
        print(f"{key} - {val['nome']}")
    print("0 - Voltar")

    escolha = input("Escolha um exemplo: ").strip()

    if escolha == "0":
        return

    if escolha in exemplos:
        exemplo = exemplos[escolha]
        try:
            from src.main import parse_to_ast
            domain_ast, problem_ast = parse_to_ast(exemplo["domain"], exemplo["problem"])

            print("\n--- AST do Domain ---")
            print(json.dumps(domain_ast, indent=2))

            print("\n--- AST do Problem ---")
            print(json.dumps(problem_ast, indent=2))
        except Exception as e:
            print(f"Erro ao gerar AST: {e}")
    else:
        print("Op√ß√£o inv√°lida.")

def imprimir_cabecalho():
    print("==========================")
    print("üîç Analisador PDDL Interativo")
    print("==========================\n")
    print("Este terminal interativo executa a an√°lise l√©xica e sint√°tica de arquivos PDDL.\n")
    print("üìå Op√ß√µes 1 a 5: Executam exemplos v√°lidos, analisando domain e problem.")
    print("‚ùå Op√ß√£o 6: Cont√©m exemplos com erros sint√°ticos intencionais para teste.")
    print("üå≥ Op√ß√£o 7: Gera a AST (√Årvore Sint√°tica Abstrata) dos arquivos PDDL.\n")

def main():
    imprimir_cabecalho()

    print("Escolha um exemplo para executar:\n")
    for key, val in exemplos.items():
        print(f"{key} - {val['nome']}")
    print("6 - Exemplos Inv√°lidos")
    print("7 - Gerar AST de um exemplo")
    print("0 - Sair")

    escolha = input("\nDigite o n√∫mero da op√ß√£o desejada: ").strip()

    if escolha == "0":
        print("Saindo...")
        return True
    elif escolha == "6":
        submenu_invalidos()
    elif escolha == "7":
        gerar_ast()
    elif escolha in exemplos:
        exemplo = exemplos[escolha]
        run_pddl(exemplo["domain"], exemplo["problem"])
    else:
        print("Op√ß√£o inv√°lida. Tente novamente.")

    return False

if __name__ == "__main__":
    while True:
        if main():
            break
        print("\n---\n")

    